
play.http.secret.key=changeme
play.http.secret.key=${?PLAY_APP_SECRET}

mongodb.uri = "mongodb://localhost:27017/catis"
mongodb.uri = ${?MONGODB_URI}

play.http.context = /catis
play.http.context = ${?APP_CONTEXT}

play.http.urlprefix = "https://example.com"
play.http.certprefix = "https://example.com"

play.server.pidfile.path=/dev/null

silhouette {
  # Authenticator settings
  authenticator.cookieDomain = "example.com"
  authenticator.secureCookie = true
  authenticator.cookiePath = ${?APP_CONTEXT}
  authenticator.signer.key = "[changemeplease]" // A unique signing key
  authenticator.signer.key = ${?AUTH_SIGNER_KEY} // A unique signing key
  authenticator.signer.key = "[changemeplease]" // A unique signing key
  authenticator.crypter.key = ${?AUTH_CRYPTER_KEY} // A unique encryption key
}

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = [".example.com", "localhost:9000"]
}

xroad.server.address = "http://x-road.example.com"
xroad.server.endpointUrl = "http://x-road.example.com/cgi-bin/consumer-proxy"
xroad.instance = test
xroad.client.memberClass = COM
xroad.client.memberCode = 12345678
xroad.client.subsystemCode = catis
xroad.client.userId = 1234567890

# If user self registrations should be disabled after the first (admin) user has registered
selfregistration.enabled = false

registration.sendto = "catis@example.com"

play.mailer {
  host = mail.example.com
  from = "CatIS <catis@example.com>"
  mock = yes
  #  port (defaults to 25)
  #  ssl (defaults to no)
  #  tls (defaults to no)
  #  user (optional)
  #  password (optional)
  #  debug (defaults to no, to take effect you also need to set the log level to "DEBUG" for the application logger)
  #  timeout (defaults to 60s in milliseconds)
  #  connectiontimeout (defaults to 60s in milliseconds)
  #  mock (defaults to no, will only log all the email properties instead of sending an email)
}
